user http;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;
    tcp_nopush on;

    keepalive_timeout 65;

    charset utf-8;

    # Include base services, such as mdb
    include services/*.nginx;

    # SSO can then be enabled per context, for example:
    #
    # server {
    #     listen 80;
    #     server_name example-protected;
    #     include sso/handler;             # add this in the protected server {}
    #     location / {
    #         proxy_pass http://host:port/
    #         include sso/protect;         # add this in all protected contexts
    #     }
    # }

    # SSO backend, uncomment once the sso service is setup
    # include sso/backend.nginx;

    # Uncomment the line below to enable contest services.
    # include services_contest/*.nginx;

    # Fallback server, renders a 404
    server {
        listen 80 default_server;
        location / {
            return 404;
        }
    }
}
